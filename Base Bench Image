Write-Host "Beginning Base Bench Setup... Sit tight, this may take a little while!!!!!!" -ForegroundColor Blue -BackgroundColor Yellow

Write-Host "Setting script execution policy and to TLS1.2" -ForegroundColor Blue -BackgroundColor Yellow
         Set-ExecutionPolicy -ExecutionPolicy Bypass -Force -Scope Process
         [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
         
Write-Host "Renaming Computer" -ForegroundColor Blue -BackgroundColor Yellow
$SN = Get-WmiObject win32_bios | Select -ExpandProperty SerialNumber
Rename-Computer -NewName 'RenameMe-$SN'
Write-Host "Computer Renamed to RenameMe-$SN" -ForegroundColor Blue -BackgroundColor Yellow
Clear-Host


Write-Host "Installing Connectwise Automate. Please be sure to move to proper company" -ForegroundColor Blue -BackgroundColor Yellow
#Start-Process "C:\Utils\CatchallAutomate.msi" -ArgumentList '/qn'
Clear-Host


Write-Host "Removing all OEM Bloatware" -ForegroundColor Blue -BackgroundColor Yellow
$MicrosoftBloatwareApps = Get-AppxPackage | Where PackageFullName -NotLike *Store*
foreach ($MicrosoftBloatwareApp in $MicrosoftBloatwareApps) {
            $PackageFullName = $MicrosoftBloatwareApp.PackageFullName
            Remove-AppxPackage -package $PackageFullName -confirm:$false -ErrorAction SilentlyContinue
            Clear-Host
                                                            }
$WindowsPCHealthCheck = Get-WmiObject win32_product | Where Name -Like "Windows PC Health Check"
$WindowsPCHealthCheck.Uninstall()
$McAfee = Get-WmiObject win32_product | Where Vendor -Like "*McAfee*"
$McAfee.Uninstall()
Clear-Host


Write-Host "Installing Base Applications" -ForegroundColor Blue -BackgroundColor Yellow
Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
choco upgrade chocolatey -force -y --limitoutput
choco upgrade adobereader -force -y --limitoutput
choco upgrade googlechrome -force -y --limitoutput --ignore-checksums
choco upgrade firefox -force -y --limitoutput
choco upgrade microsoft-teams.install -force -y --limitoutput
choco upgrade 7zip.install -force -y --limitoutput
choco upgrade microsoft-edge -force -y --limitoutput
choco upgrade zoom -force -y --limitoutput
choco upgrade vlc -force -y --limitoutput
choco upgrade 7zip -force -y --limitoutput
choco upgrade powershell -force -y --limitoutput
choco upgrade office365business --package-parameters="'/productid:O365BusinessRetail /exclude: Groove Lync Skype /language:en-US /updates:TRUE /eula:TRUE'" -force -y --limitoutput
choco upgrade dotnetfx -force -y --limitoutput
Clear-Host


Write-Host "Installing Manufacturer driver support software. Also, installing driver and BIOS updates." -ForegroundColor Blue -BackgroundColor Yellow
$Manufacturer = Get-WmiObject win32_bios | Select -ExpandProperty Manufacturer
Write-Host "Determined the Manufacturer of this workstation is $Manufacturer. Proceeding with correct driver software." -ForegroundColor Blue -BackgroundColor Yellow


If ($Manufacturer -like '*Dell*') {

         Write-Host "Installing Dell Command Update. Updating drivers and BIOS." -ForegroundColor Blue -BackgroundColor Yellow
         choco upgrade dellcommandupdate -force -y --limitoutput
         Start-Sleep -Seconds 60
         Start-Service -Name DellClientManagementService

         $DCU_x86 = Test-Path "C:\Program Files (x86)\Dell\CommandUpdate\dcu-cli.exe"
         $DCU_x64 = Test-Path "C:\Program Files\Dell\CommandUpdate\dcu-cli.exe"

     If ($DCU_x86 -eq $true){

                    Start-Process "C:\Program Files (x86)\Dell\CommandUpdate\dcu-cli.exe" -ArgumentList "/applyUpdates"

                        }

     If ($DCU_x64 -eq $true){

                    Start-Process "C:\Program Files\Dell\CommandUpdate\dcu-cli.exe" -ArgumentList "/applyUpdates"

                        }
                                 }


If ($Manufacturer -like '*Lenovo*') {

       choco upgrade lenovo-thinkvantage-system-update -force -y --limitoutput
                    Write-Host "Installing Lenovo System Update. Updating drivers and BIOS." -ForegroundColor Blue -BackgroundColor Yellow
                    Start-Sleep -Seconds 60
                    Start-Process "C:\Program Files (x86)\Lenovo\System Update\Tvsu.exe" -ArgumentList "/CM -search A -action INSTALL -noicon -includerebootpackages 1,3,4 -noreboot"

                                      }


If ($Manufacturer -like '*HP*' -or '*Hewlett*') {

        choco upgrade hpsupportassistant -force -y --limitoutput
                    Write-Host "Installing HP Support Assistant. Updating drivers and BIOS." -ForegroundColor Blue -BackgroundColor Yellow
                    Start-Sleep -Seconds 60
                    Start-Process "C:\Utils\HPSA8\InstallHPSA.exe" -ArgumentList "/S /v/qn"

                                                }
Clear-Host


Write-Host "Installing PSWindowsUpdate Module. Installing ALL available Windows and Optional Updates, including any feature updates." -ForegroundColor Blue -BackgroundColor Yellow
Install-PackageProvider -Name NuGet -Force
Install-Module -Name PSWindowsUpdate -Force
Get-WindowsUpdate -Install -AcceptAll -AutoReboot | Select Result, Title | FT
Clear-Host

Exit
